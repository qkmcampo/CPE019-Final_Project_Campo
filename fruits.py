# -*- coding: utf-8 -*-
"""Fruits

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/133g4FdhzwBwGGPV63EzwFmYujjSynZz5
"""

# -- Imports --
import streamlit as st
import numpy as np
import os
import urllib.request
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
from PIL import Image

# -- Page Configuration --
st.set_page_config(page_title="🍓 Fruit Classifier", layout="centered")

# -- Constants --
MODEL_URL = "/content/drive/MyDrive/Emtech2/fruits_model.h5"  # <-- Replace with your actual model link
MODEL_PATH = "fruits_model.h5"
IMG_SIZE = (150, 150)  # Change if your model input shape is different
CLASS_NAMES = [
    'Apple', 'Banana', 'Cherry', 'Chicko',
    'Grapes', 'Kiwi', 'Mango', 'Orange', 'Strawberry'
]

# -- Load Model from Local Path --
@st.cache_resource
def load_model_from_local():
    model = load_model("/content/drive/MyDrive/Emtech2/fruits_model.h5")  # your local path
    return model

model = load_model_from_local()


# -- UI Styling --
st.markdown("""
    <style>
        .stButton>button {
            background-color: #28a745;
            color: white;
            font-weight: bold;
            border-radius: 5px;
        }
        .stButton>button:hover {
            background-color: #1e7e34;
        }
        .footer {
            margin-top: 40px;
            text-align: center;
            color: #888;
            font-size: 0.85rem;
        }
    </style>
""", unsafe_allow_html=True)

# -- App Title and Upload --
st.title("🍌 Fruit Image Classifier")
st.markdown("Upload a fruit image and the model will predict its class.")

uploaded_file = st.file_uploader("📤 Upload an image", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    img = Image.open(uploaded_file).convert('RGB')
    st.image(img, caption="📷 Uploaded Image", use_column_width=False, width=300)

    # Preprocess
    img_resized = img.resize(IMG_SIZE)
    img_array = image.img_to_array(img_resized) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    # Predict
    with st.spinner("🔍 Classifying..."):
        prediction = model.predict(img_array)[0]
        predicted_index = int(np.argmax(prediction))
        predicted_class = CLASS_NAMES[predicted_index]
        confidence = float(np.max(prediction)) * 100

    # Display Results
    st.success(f"🎯 **Prediction:** `{predicted_class}`")
    st.metric("🔒 Confidence", f"{confidence:.2f} %")

    # Optional: Fruit Facts
    fruit_facts = {
        "Apple": "🍎 An apple a day keeps the doctor away.",
        "Banana": "🍌 Rich in potassium and great for energy.",
        "Cherry": "🍒 Packed with antioxidants and anti-inflammatory compounds.",
        "Chicko": "🌰 Chicko (sapodilla) is sweet and high in fiber.",
        "Grapes": "🍇 Full of vitamins and hydration.",
        "Kiwi": "🥝 High in vitamin C and supports immunity.",
        "Mango": "🥭 The king of fruits and rich in vitamin A.",
        "Orange": "🍊 Loaded with vitamin C for your immune system.",
        "Strawberry": "🍓 Sweet, tangy, and heart-healthy!"
    }

    if predicted_class in fruit_facts:
        st.info(fruit_facts[predicted_class])
else:
    st.info("🖼️ Please upload a fruit image to start.") 
